@using Microsoft.AspNetCore.Mvc.ViewFeatures
@model PantryPlusRecipe.Models.Cart



<div class="row m-3 mx-1 mx-md-3">
  <div class="col-sm-12 px-2">

    <div class="mt-3 py-4 border rounded inset-shadow-sm bg-white">
      @if (ViewBag.CartItems.Count <= 0)
      {
        @:<span>It looks like you haven't yet added anything to your cart. Get started</span>
      }
      else
      {
        <div class="row  ps-4">
          <div class="col-md-8">
            <div class="row">
              <div class="col-6 text-center">
                Item
              </div>
              <div class="col-3 text-center pe-3">
                Quantity
              </div>
              <div class="col-3 d-inline overflow-ellipsis">
                Aisle - @ViewBag.KrogerStoreName
              </div>
            </div>
            @foreach (Cart item in ViewBag.CartItems)
            {
              if (item.JoinEntities.Count == 0)
              {
                @await Html.PartialAsync("./Modules/Product.cshtml",
          new ViewDataDictionary(ViewData) {
          { "cartId", item.CartId },
          { "imgUrl", item.KrogerImgLink },
          { "name", item.KrogerItemName},
          { "itemSize", item.KrogerItemSize},
          { "quantity", item.ItemCount},
          { "krogerCartQuantity", item.CountPlacedInCart},
          { "itemPrice", item.KrogerCost},
          { "krogerAisle", item.KrogerAisle},
          { "recipeId", 1000},
          { "calculatedItemPrice", Math.Round((item.ItemCount * item.KrogerCost + (item.KrogerCost * item.CountPlacedInCart)),2)}
          })
              }
              else
              {


                @foreach (var join in item.JoinEntities)
                {
                  @await Html.PartialAsync("./Modules/Product.cshtml",
          new ViewDataDictionary(ViewData) {
          { "cartId", join.Cart.CartId },
          { "imgUrl", join.Cart.KrogerImgLink },
          { "name", join.Cart.KrogerItemName},
          { "itemSize", join.Cart.KrogerItemSize},
          { "quantity", join.Cart.ItemCount},
          { "krogerCartQuantity", join.Cart.CountPlacedInCart},
          { "itemPrice", join.Cart.KrogerCost},
          { "krogerAisle", join.Cart.KrogerAisle},
          { "recipeId", join.Recipe.RecipeId},
          { "calculatedItemPrice", Math.Round((join.Cart.ItemCount * join.Cart.KrogerCost + (join.Cart.KrogerCost * join.Cart.CountPlacedInCart)),2)}
          })

                }
              }
            }
          </div>
          <div class="col-md-4 pb-5">
            <div class="row d-flex justify-content-center">
              <div class="col-6 text-center">
                Recipe Details
              </div>
            </div>
            @foreach (Recipe recipe in ViewBag.ListOfRecipes)
            {
              @await Html.PartialAsync("./Modules/Recipe.cshtml",
          new ViewDataDictionary(ViewData) {
          { "name", recipe.Name },
          { "id", recipe.RecipeId },
          { "imgUrl", recipe.ImgUrl },
          { "steps", recipe.NumberOfSteps },
          { "sections", recipe.NumberOfSections },
          { "minutes", (recipe.PrepMinutes + recipe.CookMinutes) }
          })
              <script>
                $('.@recipe.RecipeId-recipe').hover(function () {
                  $('.hiddenRecipe').hide();
                  $('#@recipe.RecipeId-recipeCard').show();
                });
                $('.1000-recipe').hover(function () { //this is just here as a placeholder
                  $('.hiddenRecipe').hide();
                  $('#1000-recipeCard').show();
                });
              </script>
            }
            @await Html.PartialAsync("./Modules/AddAllToCart.cshtml")
          </div>
        </div>
      }
    </div>

  </div>
</div>


<script>
  const addSubtractTotal = (id, method) => {
    $.ajax(
      {
        type: 'POST',
        dataType: 'JSON',
        url: '/Cart/AddSubtractTotal',
        data: { id: id, method: method },
        success:
          function (response) {
            $(`#${id}-quantity`).text(response.count);
            $(`#${id}-calcPrice`).text((response.count * response.price).toFixed(2));
          },
        error:
          function (response) {
            console.log("Error: ", response);
          }
      });
  }

  const addAllItems = (id) => {
    $.ajax(
      {
        type: 'POST',
        dataType: 'JSON',
        url: '/Cart/PutToCart',
        data: { id: id },
        success:
          function (response) {
            location.reload();
          },
        error:
          function (response) {
            console.log("Error: ", response);
          }
      });
  }
  const removeIngredients = (id) => {
    $.ajax(
      {
        type: 'POST',
        dataType: 'JSON',
        url: '/Cart/RemoveIngredientsFromRecipe',
        data: { recipeId: id },
        success:
          function (response) {
            location.reload();
          },
        error:
          function (response) {
            console.log("Error: ", response);
          }
      });
  }


</script>

@* <div class="row m-3">
  <div class="col-sm-12 px-2">
  @for (int y = 0; y < 3; y++)
  {
  <div class="mt-3 p-4 border rounded inset-shadow-sm bg-white">
  <div class="row">
  <div class="col-sm-7 ps-5">
  <div class="row">
  <div class="col-2">
  </div>
  <div class="col-5 text-center">
  Item
  </div>
  <div class="col-3 text-center">
  Quantity
  </div>
  <div class="col-2 text-end">
  Cost
  </div>
  </div>
  @for (int x = 0; x < 7; x++)
  {
  @await Html.PartialAsync("./Modules/Product.cshtml",
  new ViewDataDictionary(ViewData) {
  { "imgUrl", "https://www.kroger.com/product/images/medium/front/0001111080580" },
  { "name", "Tillamook Salted Butter"},
  { "itemCount", "4ct / 4oz"},
  { "quantity", 3},
  { "itemPrice", 5.99}
  })
  }
  </div>
  <div class="col-sm-5 pb-5">
  <div class="row d-flex justify-content-center">
  <div class="col-6 text-center">
  Recipe Details
  </div>
  </div>
  @await Html.PartialAsync("./Modules/Recipe.cshtml")
  </div>
  </div>
  </div>
  }
  </div>
  </div> *@




@* <button id="test" type="button" class="btn btn-primary">Test</button>
  <a href="/GetCartAuthorizationCode"><input type="button" value="Authorize Cart Add" class="btn btn-primary mb-3 shadow-sm text-white" /></a>
  <script>
  $('#test').click(function () {
  let test = {};
  test.data = { items: [] };
  test.data.items.push({ "upc": "0001111040190", "quantity": 2 });
  test.data.items.push({ "upc": "0001111008485", "quantity": 1 });
  test.data.items.push({ "upc": "0001200018119", "quantity": 4 });

  submitAjax(test)
  });
  function submitAjax(jsonString) {
  $.ajax(
  {
  type: 'POST',
  dataType: 'JSON',
  url: '/Cart/PutToCart',
  data: { jsonPost: JSON.stringify(jsonString) },
  success:
  function (response) {
  console.log(response);
  },
  error:
  function (response) {
  console.log("Error: ", response);
  }
  });
  }
  </script> *@
